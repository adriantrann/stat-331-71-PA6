
---
title: "Linear Regression"
author: "Adrian Tran, Harshitha Bachina, Hayden King, Josh Shneyder"
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
    number-sections: true
    code-fold: true
editor: source
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

# Linear Regression

```{r} 
#| include: false
gdp = read.csv("~/Desktop/stat-331-71-PA6/gdppercapita_us_inflation_adjusted.csv")
life = read.csv("~/Desktop/stat-331-71-PA6/life_expectancy_years.csv")
library(tidyverse)
library(ggplot2)
library(broom)
library(knitr)
library(kableExtra)
gdp_clean <- gdp |>
  pivot_longer(cols = "X1959":"X2019",
               names_to = "Year",
               values_to = "GDP")

life_clean <- life |>
  pivot_longer(cols = "X1959":"X2019",
               names_to = "Year",
               values_to = "Life_Expectancy") |>
  select("country", "Year", "Life_Expectancy")

joined_data = merge(gdp_clean, life_clean, by = c("Year", "country")) |>
  mutate(
    Year = str_remove(Year, "X"),
    thousand = if_else(str_detect(GDP, "k"), T, F),
    GDP = as.double(str_remove(GDP, "k")),
    GDP = if_else(thousand, GDP * 1000, GDP),
    lGDP = log(GDP)
  ) |>
  select(-thousand) |>
  drop_na()
```

## Data Visualization

### Linear- Visualization #1

```{r}
ggplot(data = joined_data, aes(x = GDP, y = Life_Expectancy)) +
  geom_point(alpha=0.05, color="orange") +
  labs(
    x = "GDP per capita",
    y = "",
    subtitle = "Life Expectancy",
    title = "Relationship between GDP per capita and Life Expectancy"
  ) +
  geom_smooth(method = "lm")
model = lm(Life_Expectancy ~ GDP, data = joined_data)
tidy(model)
summary(model)$r.squared
```
$$\widehat{Life Expectancy} = 63.28 + 0.0003135GDP + u$$
The linear model seems to be a poor fit for this data. The $R^2$ is rather low and the graph shows that the relationship is logarithmic rather than linear. The linear model predicts that if GDP per capita increases by 1 dollar, life expectancy is predicted to increase by 0.0003135 years.

### Logarithmic- Visualization #2

```{r}
lineargraph = ggplot(data = joined_data, aes(x = lGDP, y = Life_Expectancy)) +
  geom_point(alpha=0.1, color="orange") +
  labs(
    x = "Ln(GDP per capita)",
    y = "",
    subtitle = "Life Expectancy",
    title = "Relationship between Ln(GDP per capita) and Life Expectancy"
  ) +
  geom_smooth(method = "lm")
lineargraph
logmodel = lm(Life_Expectancy ~ lGDP, data = joined_data)
tidy(logmodel)
summary(logmodel)$r.squared
```
$$\widehat{Life Expectancy} = 22.84 + 5.312lGDP + u$$
The logarithmic transformation of GDP per capita makes a linear model fit quite well. The $R^2$ is moderate, which is pretty good considering how many factors can influence life expectancy across countries and across time. This model predicts that if GDP per capita increases by 1%, life expectancy increases by approximately 0.05312 years.

From here on out, we will examine only the relationship between $lGDP$ and $Life Expectancy$.

### Changes Over Time

```{r}
years = 1959:2019
lms_year = matrix(nrow = length(years), ncol = 2)
lms_year[, 1] = years
for (y in years) {
  year_data = joined_data |>
    filter(Year == y)
  year_model = lm(Life_Expectancy ~ lGDP, data = year_data)
  lms_year[y - 1958, 2] = summary(year_model)$r.squared
}
lms_year = data.frame(lms_year)
colnames(lms_year) = c("Year", "Rsquared")
ggplot(data = lms_year, aes(x = Year, y = Rsquared)) +
  geom_line(color="steelblue") +
  ylim(0, 1) +
  labs(y = "",
       subtitle = "R-Squared",
       title = "R-Squared of ln(GDP per capita) and Life Expectancy over time")
```

### Differences Between Countries
The relationship is pretty stable over time and has been trending upward for the past decade. Outliers can be seen in the noticeable dips in the $R^2$. These low outliers could also be seen on the previous graphs.
```{r}
joined_data <- joined_data |>
  mutate(residuals = logmodel$residuals)
outliers <- joined_data |>
  filter(abs(residuals) > 20) |>
  mutate(lGDP = round(lGDP, digits = 2),
         residuals = round(residuals, digits = 2))
kable(
  outliers,
  col.names = c(
    "Year",
    "Country",
    "GDP per Capita",
    "Life Expectancy",
    "ln(GDP per Capita)",
    "Residual"
  )
) |>
  kable_material_dark("hover")
  
```

These high residual data points are all on the low end.
They represent the following events:
Cameroonian War of Independence and following Civil War

Great Leap Forward and resulting famine

Conflict between Hutus and Tutsis in Burundi and Rwanda (culminating in the 1993 Rwandan Genocide)

The AIDS crisis in Southern Africa as seen in Botswana and Eswatini

A series of hurricanes that hit Haiti in 2009


```{r}
countries = joined_data |>
  select(country) |>
  distinct()

lms_country = matrix(nrow = length(countries), ncol = 2)
lms_country[, 1] = countries
lms_country = data.frame(lms_country)
colnames(lms_country) = c("Country", "Rsquared")
idnum = 1
for (c in countries$country) {
  country_data = joined_data |>
    filter(country == c)
  country_model = lm(Life_Expectancy ~ lGDP, data = country_data)
  lms_country[idnum , "Rsquared"] = summary(country_model)$r.squared
  idnum = idnum + 1
}
```

```{r}
ggplot(data = lms_country, aes(x = Rsquared)) +
  geom_histogram(binwidth = 0.1, fill="steelblue") +
  labs(
    x = "R-squared",
    y = "",
    subtitle = "Count",
    title = "Histogram of Countries by R-Squared of ln(GDP per capita) and Life Expectancy"
  )
```
While the relationship between $lGDP$ and $Life Expectancy$ is quite strong for most countries, for some countries it is much weaker. This is mostly due to events that decrease life expectancy such as epidemics, famines, natural disasters and wars. Botswana for example had a linear relationship between $lGDP$ and $Life Expectancy$ until the AIDS crisis hit. This drop in $Life Expectancy$ while $lGDP$ continued to grow is responsible for its $R^2$ of 0.0013.
```{r}
joined_data |>
  filter(country == "Botswana") |>
  ggplot(aes(x = lGDP, y = Life_Expectancy)) +
  geom_point() +
  labs(
    x = "ln(GDP per capita)",
    y = "",
    subtitle = "Life Expectancy",
    title = "Life Expectancy and ln(GDP per capita) in Botswana"
  ) +
  geom_smooth(method = "lm")
```

```{r}
lms_country |>
  mutate(Rsquared = round(Rsquared, digits = 3)) |>
  slice_min(order_by = Rsquared, n = 8) |>
  kable() |>
  kable_material_dark("hover")
```


```{r}
joined_data |>
  filter(country == "Germany") |>
  ggplot(aes(x = lGDP, y = Life_Expectancy)) +
  geom_point() +
  labs(
    x = "ln(GDP per capita)",
    y = "",
    subtitle = "Life Expectancy",
    title = "Life Expectancy and ln(GDP per capita) in Germany"
  ) +
  geom_smooth(method = "lm")
```
In countries without life expectancy-decreasing events since 1959, there is a very strong linear relationship. In the case Germany, the $R^2$ is 0.983.

```{r}
lms_country |>
  mutate(Rsquared = round(Rsquared, digits = 3)) |>
  slice_max(order_by = Rsquared, n = 8) |>
  kable() |>
  kable_material_dark("hover")
```


## Linear Regression

### Assumptions
1. Linearity
```{r}
lineargraph
```
Even after the log transformation of $GDP$, the data is still a bit nonlinear.

2. Random Sampling/ No Autocorrelation
The assumption of random sampling isn't met, but we can substitute the assumption of no autocorrelation. The data shows partial autocorrelation of about 0.2 which is relatively stable across various lags, so this assumption isn't met either. The p-value of the autocorrelation is 0.
```{r}
acf(joined_data$residuals, type="correlation")
library(lmtest)
dwtest(logmodel)
```
3. No colinearity
Since there is only one explanatory variable ($lGDP$), there can't be any autocorrelation

4. Mean Independence
```{r}
ggplot(data=joined_data, aes(x=lGDP, y=residuals)) +
  geom_point(alpha=0.15, color="steelblue") +
  labs(x="ln(GDP per capita)", y="", subtitle = "Life Expectancy Residual", title = "Residuals Plot")

```
The assumption of mean independence isn't met because the explanatory variable can be used to predict the residuals. For high values of $lGDP$, the residuals are all below 0 for example.

5. Homoskedasticity
```{r}
library(AER)
coeftest(logmodel, vcovHC(logmodel))
bptest(logmodel)
```
$$BP = n \times R^2_{\hat u^2} = 301.4 $$
$$9162 \times R^2_{\hat u^2} = 301.4$$
$$R^2_{\hat u^2} = 0.033$$
While the data isn't homoskedastic, the Breush-Pagan test statistic shows that only 3.3% of the variance in $u_i$ can be explained by the variance in $lGDP$. We can say this because $var(u_i) = E(u^2_i) - E(u_i)^2$ and $E(u_i)=0$.

6. Normality of $u$
```{r}
ggplot(data=joined_data, aes(x=residuals)) +
  geom_histogram(fill="steelblue") +
  labs(y="", subtitle = "Count", x="Residuals", title="Histogram of Residuals")
```
While the distribution is skewed left, it isn't severe. This is because of the low outliers mentioned earlier.

### Estimated Model

As shown previously, the estimated linear regression model is:
$$Life Expectancy = 22.84 + 5.312lGDP + u$$
This model predicts that if GDP per capita increases by 1%, life expectancy increases by approximately 0.05312 years.

## Model Fit

```{r}
variance_table = matrix(nrow = 1, ncol = 3)
colnames(variance_table) = c("Variance of Response",
                             "Response of Fitted Values",
                             "Variance of Residuals")
variance_table[1, 1] = var(joined_data$Life_Expectancy)
variance_table[1, 2] = var(logmodel$fitted.values)
variance_table[1, 3] = var(logmodel$residuals)
variance_table[1, ] = round(variance_table[1, ], digits = 2)
kable(variance_table) |>
  kable_material_dark()
```
$$R^2 = 1-\frac{38.29}{97.63} = \frac{59.34}{97.63} = 0.608$$
The variance in $lGDP$ accounts for 60.7% of the variance in $Life Expectancy$. This is a moderate $R^2$, so this model does a decent job of explaining the response. Considering how many factors may influence $Life Expectancy$, this is a good quality model.

```{r}
library(patchwork)
set.seed(1738)
sigma = sigma(logmodel)
predictions = predict(logmodel)
simulation <- function(x, rse) {
  x <- x + rnorm(n = length(x), mean = 0, sd = rse)
  return(x)
}
actualdata = ggplot(data = joined_data, aes(x = Life_Expectancy)) +
  geom_histogram(binwidth = 2)
simdata = ggplot(data = joined_data, aes(x = simulation(predictions, sigma))) +
  geom_histogram(binwidth = 2)
actualdata + simdata
```
Because of the left skew of the data, the simulation distribution doesn't exactly match the actual distribution.
